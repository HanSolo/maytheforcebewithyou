import java.text.SimpleDateFormat

plugins {
    id 'idea'
    id 'java-library'
    id 'com.google.osdetector'           version '1.7.0'
    id 'org.javamodularity.moduleplugin' version '1.8.10'
    id 'org.beryx.jlink'                 version '2.24.4'
    id 'net.nemerosa.versioning'         version '2.15.1'
}

description = 'Demo code for session May the force be with you'
mainClassName = "$moduleName/eu.hansolo.maytheforcebewithyou.css.Launcher"

Date buildTimeAndDate = new Date()
ext {
    moduleName      = 'eu.hansolo.maytheforcebewithyou'
    buildDate       = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    platform        = osdetector.os == 'osx' ? osdetector.arch == 'aarch_64' ? 'mac-aarch64' : 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os == 'linux' ? osdetector.arch == 'aarch_64' ? 'linux-aarch64' : 'linux' : osdetector.os
    buildTime       = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    ciOssrhUsername = System.getenv('OSSRH_USERNAME')
    ciOssrhPassword = System.getenv('OSSRH_PASSWORD')
    ciGHUser        = System.getenv('GH_USER')
    ciGHToken       = System.getenv('GH_TOKEN')
    gpgkey          = System.getenv("GPG_PRIVATE_KEY")
    gpgpassphrase   = System.getenv("PASSPHRASE")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.openjfx:javafx-base:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-graphics:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-controls:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-media:${javafxVersion}:${platform}"
    implementation "org.openjfx:javafx-swing:${javafxVersion}:${platform}"
    implementation 'eu.hansolo:jdktools:17.0.11'
    implementation 'eu.hansolo:toolbox:17.0.21'
    implementation 'eu.hansolo:toolboxfx:17.0.27'
    implementation 'eu.hansolo:applefx:17.0.45'
}


jar {
    from {
        //duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        //configurations.runtimeClasspath.collect {  it.isDirectory() ? it : zipTree(it)  }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes(
                'Built-By'              : System.properties['user.name'],
                'Created-By'            : System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
                'Build-Date'            : project.buildDate,
                'Build-Time'            : project.buildTime,
                'Build-Revision'        : versioning.info.commit,
                'Specification-Title'   : project.name,
                'Specification-Version' : project.version,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Bundle-Name'           : project.name,
                'Bundle-License'        : 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://spdx.org/licenses/Apache-2.0.html',
                'Bundle-Description'    : description,
                'Bundle-SymbolicName'   : 'eu.hansolo.maytheforcebewithyou',
                'Export-Package'        : 'eu.hansolo.maytheforcebewithyou',
                'Class-Path'            : '${project.name}-${project.version}.jar',
                'Main-Class'            : 'eu.hansolo.maytheforcebewithyou.Launcher'
        )
    }
}


// start the demo from gradle
task DemoCss(type: JavaExec) {
    mainClass = "eu.hansolo.maytheforcebewithyou.css.DemoLauncher"
    classpath = sourceSets.main.runtimeClasspath
}

task DemoCanvas(type: JavaExec) {
    mainClass = "eu.hansolo.maytheforcebewithyou.canvas.DemoLauncher"
    classpath = sourceSets.main.runtimeClasspath
}

task DemoMatrix(type: JavaExec) {
    mainClass = "eu.hansolo.maytheforcebewithyou.canvas.DemoMatrixLauncher"
    classpath = sourceSets.main.runtimeClasspath
}

task DemoDropdown(type: JavaExec) {
    mainClass = "eu.hansolo.maytheforcebewithyou.macosdropdown.Launcher"
    classpath = sourceSets.main.runtimeClasspath
}

task DemoShadow(type: JavaExec) {
    mainClass = "eu.hansolo.maytheforcebewithyou.shadows.Launcher"
    classpath = sourceSets.main.runtimeClasspath
}
